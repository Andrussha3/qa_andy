import tkinter as tk
from tkinter import messagebox, font
import random


class Minesweeper:
    def __init__(self, master, rows=10, cols=10, mines=15):
        self.master = master
        self.rows = rows
        self.cols = cols
        self.mines = mines

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∏–ª–µ–π
        self.big_font = font.Font(size=16, weight='bold')  # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç
        self.large_font = font.Font(size=14)  # –®—Ä–∏—Ñ—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
        self.opened_color = '#f0f0f0'
        self.closed_color = '#c0c0c0'
        self.flag_color = '#ffcccc'
        self.mine_color = '#ff0000'

        self.create_ui()
        self.new_game()

    def create_ui(self):
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
        self.reset_button = tk.Button(self.master,
                                      text="–ù–æ–≤–∞—è –∏–≥—Ä–∞",
                                      command=self.new_game,
                                      height=2,
                                      font=self.large_font,
                                      bg='#e0e0e0')
        self.reset_button.grid(row=self.rows, columnspan=self.cols, sticky="we")

        # –°–æ–∑–¥–∞–µ–º —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –∫–ª–µ—Ç–∫–∏ –ø–æ–ª—è
        self.buttons = {}
        for row in range(self.rows):
            for col in range(self.cols):
                button = tk.Button(self.master,
                                   text='',
                                   width=3,  # –£–º–µ–Ω—å—à–∞–µ–º width –¥–ª—è –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
                                   height=2,
                                   font=self.big_font,
                                   bg=self.closed_color,
                                   relief='raised',
                                   command=lambda r=row, c=col: self.on_click(r, c))
                button.bind('<Button-3>', lambda e, r=row, c=col: self.on_right_click(r, c))
                button.grid(row=row, column=col, padx=2, pady=2)  # –£–≤–µ–ª–∏—á–∏–ª–∏ –æ—Ç—Å—Ç—É–ø—ã
                self.buttons[(row, col)] = button

    def new_game(self):
        self.mine_positions = set()
        self.opened = 0
        self.game_active = True

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
        for button in self.buttons.values():
            button.config(text='',
                          state='normal',
                          bg=self.closed_color,
                          relief='raised',
                          fg='black')

        # –†–∞–∑–º–µ—â–∞–µ–º –º–∏–Ω—ã
        self.place_mines()

    def place_mines(self):
        """–†–∞–∑–º–µ—â–µ–Ω–∏–µ –º–∏–Ω –Ω–∞ –ø–æ–ª–µ"""
        while len(self.mine_positions) < self.mines:
            row = random.randint(0, self.rows - 1)
            col = random.randint(0, self.cols - 1)
            self.mine_positions.add((row, col))

    def count_adjacent_mines(self, row, col):
        """–ü–æ–¥—Å—á–µ—Ç –º–∏–Ω –≤–æ–∫—Ä—É–≥ –∫–ª–µ—Ç–∫–∏"""
        count = 0
        for r in range(max(0, row - 1), min(self.rows, row + 2)):
            for c in range(max(0, col - 1), min(self.cols, col + 2)):
                if (r, c) in self.mine_positions:
                    count += 1
        return count

    def on_click(self, row, col):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ª–µ–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏"""
        if not self.game_active:
            return

        button = self.buttons[(row, col)]

        # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –∫–ª–µ—Ç–∫–∏ –∏ –∫–ª–µ—Ç–∫–∏ —Å —Ñ–ª–∞–≥–∞–º–∏
        if button['state'] == 'disabled' or button['text'] == 'üö©':
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–∏–Ω—É
        if (row, col) in self.mine_positions:
            button.config(bg=self.mine_color, text='üí£', font=self.big_font)
            self.game_over()
            return

        # –ü–æ–¥—Å—á–µ—Ç —Å–æ—Å–µ–¥–Ω–∏—Ö –º–∏–Ω
        mines_nearby = self.count_adjacent_mines(row, col)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –æ—Ç–∫—Ä—ã—Ç–æ–π –∫–ª–µ—Ç–∫–∏
        button.config(text=str(mines_nearby) if mines_nearby else '',
                      state='disabled',
                      bg=self.opened_color,
                      relief='sunken',
                      fg=self.get_number_color(mines_nearby),
                      font=self.big_font)

        self.opened += 1

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã
        if self.opened == self.rows * self.cols - self.mines:
            self.victory()
            return

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø—É—Å—Ç—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π
        if mines_nearby == 0:
            for r in range(max(0, row - 1), min(self.rows, row + 2)):
                for c in range(max(0, col - 1), min(self.cols, col + 2)):
                    if (r, c) != (row, col) and self.buttons[(r, c)]['state'] == 'normal':
                        self.on_click(r, c)

    def get_number_color(self, num):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç –¥–ª—è —Ü–∏—Ñ—Ä—ã"""
        colors = ['', 'blue', 'green', 'red', 'darkblue',
                  'brown', 'teal', 'black', 'gray']
        return colors[num] if 0 < num < len(colors) else 'black'

    def on_right_click(self, row, col):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–∂–∫–∞)"""
        if not self.game_active:
            return

        button = self.buttons[(row, col)]

        if button['state'] == 'normal':
            if button['text'] == '':
                button.config(text='üö©', bg=self.flag_color, font=self.big_font)
            elif button['text'] == 'üö©':
                button.config(text='', bg=self.closed_color)

    def game_over(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∏–≥—Ä—ã—à–∞"""
        self.game_active = False
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –º–∏–Ω—ã
        for (row, col) in self.mine_positions:
            self.buttons[(row, col)].config(text='üí£', bg=self.mine_color, font=self.big_font)
        messagebox.showinfo("Game Over", "–í—ã –Ω–∞—Å—Ç—É–ø–∏–ª–∏ –Ω–∞ –º–∏–Ω—É!")

    def victory(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–±–µ–¥—ã"""
        self.game_active = False
        # –ü–æ–º–µ—á–∞–µ–º –≤—Å–µ –º–∏–Ω—ã —Ñ–ª–∞–≥–∞–º–∏
        for (row, col) in self.mine_positions:
            self.buttons[(row, col)].config(text='üö©', bg=self.flag_color, font=self.big_font)
        messagebox.showinfo("–ü–æ–±–µ–¥–∞!", "–í—ã –Ω–∞—à–ª–∏ –≤—Å–µ –º–∏–Ω—ã!")


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
root = tk.Tk()
root.title("–°–∞–ø—ë—Ä")
root.minsize(600, 600)  # –£–≤–µ–ª–∏—á–∏–ª–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞

# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
game = Minesweeper(root)
root.mainloop()